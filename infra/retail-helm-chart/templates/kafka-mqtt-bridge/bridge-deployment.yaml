apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "bridge.labels" . | nindent 4 }}
  name: {{ include "bridge.name" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
    {{- include "bridge.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
      {{- include "bridge.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccount: {{ include "bridge.serviceAccountName" . }}
      containers:
      - name: bridge
        image: {{ .Values.kafka2mqttBridge.image }}
        env:
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: {{ join "," .Values.globalInfra.kafka.bootstrapServers | quote }}
        - name: KAFKA_TOPIC
          value: {{ .Values.globalInfra.kafka.couponPredictionTopic | default "predictionsTopic" | quote }}
        - name: MQTT_HOST
          value: {{ .Values.globalInfra.mqtt.brokerServer | quote }}
        {{- if .Values.globalInfra.mqtt.brokerPort }}
        - name: MQTT_PORT
          value: {{  .Values.globalInfra.mqtt.brokerPort  | quote }}
        {{- end }}
        ports:
        - containerPort: 80
        redinessProbe:
          tcpSocket:
            port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /hello
            port: 80